/*
 * Copyright 2020 David Berry <dgb37@cam.ac.uk>, Joe Isaacs <josi2@cam.ac.uk>, Andrew Rice <acr31@cam.ac.uk>, J.B. Saville
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.ac.cam.jbs52.game_of_life;

import static com.google.common.truth.Truth.assertThat;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;

@RunWith(JUnit4.class)
public class PackedLongTest {

	@Test
	public void set_onlyChangesAffectedPosition() {
		// ARRANGE
		PackedLong board = new PackedLong(0xF00000000000000FL);

		// ACT
		board.set(4, true);
		long updated = board.getPacked();

		// ASSERT
		assertThat(updated).isEqualTo(0xF00000000000001FL);
	}

	@Test
	public void clear_onlyChangesAffectedPosition() {
		// ARRANGE
		PackedLong board = new PackedLong(0xF00000000000000FL);

		// ACT
		board.set(4, false);
		long updated = board.getPacked();

		// ASSERT
		assertThat(updated).isEqualTo(0xF00000000000000FL);
	}

	@Test
	public void set_setsHighestBit_atPosition63() {
		// ARRANGE
		PackedLong board = new PackedLong(0x0000000000000000L);

		// ACT
		board.set(63, true);
		long updated = board.getPacked();

		// ASSERT
		assertThat(updated).isEqualTo(0x8000000000000000L);
	}

	@Test
	public void get_getsHighestBit_whenPosition63IsSet() {
		// ARRANGE
		PackedLong board = new PackedLong(0x8000000000000000L);

		// ACT
		boolean value = board.get(63);

		// ASSERT
		assertThat(value).isTrue();
	}

	@Test
	public void get_getsHighestBit_whenPosition63IsClear() {
		// ARRANGE
		PackedLong board = new PackedLong(0x7000000000000000L);

		// ACT
		boolean value = board.get(63);

		// ASSERT
		assertThat(value).isFalse();
	}
	
	@Test
	public void defaultConstructor_givesZero() {
		PackedLong board = new PackedLong();
		
		long value = board.getPacked();
		
		assertThat(value).isEqualTo(0);
	}
	
	@Test
	public void size_is64() {
		
	}
}
