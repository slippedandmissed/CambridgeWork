package uk.ac.cam.jbs52.linkedlists;

public class ArrayedList<T> implements OopList<T> {
	
	private Object[] array;
	private int length;
	
	public ArrayedList() {
		this(1);
	}
	
	public ArrayedList(int size) {
		array = new Object[size];
		length = 0;
	}
	
	public static <T> ArrayedList<T> create(T[] elements) {
		
	}

	@Override
	public void addFirst(T element) {
		if (length == array.length) {
			Object[] newArray = new Object[array.length*2];
			newArray[0] = element;
			for (int i=0; i<array.length; i++) {
				newArray[i+1] = array[i];
			}
			array = newArray;
		} else {
			for (int i=length; i>0; i--) {
				array[i] = array[i-1];
			}
			array[0] = element;
		}
		length++;
	}

	@Override
	public T removeFirst() {
		T elt = (T) array[0];
		for (int i=0; i<length; i++) {
			array[i] = (i+1 < array.length) ? array[i+1] : null;
		}
		length--;
		return elt;
	}

	@Override
	public T get(int n) {
		return (T) array[n];
	}

	@Override
	public int length() {
		return length;
	}

}
