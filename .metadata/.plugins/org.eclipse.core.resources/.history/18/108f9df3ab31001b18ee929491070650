/*
 * Copyright 2020 David Berry <dgb37@cam.ac.uk>, Joe Isaacs <josi2@cam.ac.uk>, Andrew Rice <acr31@cam.ac.uk>, J.B. Saville
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.ac.cam.jbs52.game_of_life;

import java.util.AbstractList;

class PackedLong extends AbstractList<Boolean> {
	
	private long packed;
	
	public PackedLong(long initial) {
		packed = initial;
	}

#	/**
	 * Set the nth bit in the packed number to the value given and return the new
	 * packed number
	 *
	 * @param packed   the packed number
	 * @param position the position of the bit of interest
	 * @param value    the value to set the bit to
	 * @return the new packed number
	 */
	public static long set(long packed, int position, boolean value) {
		if (value) {
			packed |= 1L << position;
		} else {
			packed &= ~(1L << position);
		}
		return packed;
	}

	@Override
	public Boolean get(int index) {
		return ((packed >>> index) & 1) == 1;
	}
	
	@Override
	public Boolean set(int index, Boolean value) {
		boolean current = get(index);
		if (value) {
			packed |= 1L << index;
		} else {
			packed &= ~(1L << index);
		}
		return current;
	}

	@Override
	public int size() {
		return 64;
	}
}
