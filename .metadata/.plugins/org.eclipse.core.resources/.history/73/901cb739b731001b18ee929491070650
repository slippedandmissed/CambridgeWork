/*
 * Copyright 2020 David Berry <dgb37@cam.ac.uk>, Joe Isaacs <josi2@cam.ac.uk>, Andrew Rice <acr31@cam.ac.uk>, J.B. Saville
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.ac.cam.jbs52.game_of_life;

import java.util.Arrays;
import java.util.stream.Collectors;

public class Rule {

	public final int[] B, S;

	public Rule(int[] B, int[] S) {
		this.B = B;
		this.S = S;
	}
	
	@Override
	public String toString() {
		return String.format("B%s/S%s", Arrays.stream(B).boxed().map(String::valueOf).collect(Collectors.joining("")), Arrays.stream(S).boxed().map(String::valueOf).collect(Collectors.joining("")));
	}

	static Rule gameOfLife() {
		return new Rule(new int[] { 3 }, new int[] { 2, 3 });
	}

	static Rule highLife() {
		return new Rule(new int[] { 3, 6 }, new int[] { 2, 3 });
	}

	static Rule seeds() {
		return new Rule(new int[] { 2 }, new int[] {});
	}
}
